rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Public mapping for resolving agents by token/code
    match /agentTokens/{id} {
      allow read: if true;
      allow write: if request.auth != null; // only authenticated app users write
    }

    // Admins registry: readable by the admin user himself; not writable from client
    match /admins/{uid} {
      allow read: if request.auth != null && request.auth.uid == uid;
      allow write: if false;
    }

    // Public read for events and tickets
    match /profiles/{userId}/events/{eventId} {
      allow read: if true;
      allow write: if request.auth != null && (request.auth.uid == userId || isAdmin());
      match /tickets/{ticketId} {
        allow read: if true;
        allow write: if request.auth != null && (request.auth.uid == userId || isAdmin());
      }
    }

    // Products: public read, owner or admin write
    match /profiles/{userId}/products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }

    // Orders: public read; writes allowed for owner, valid agent token mapping, or admin
    match /profiles/{userId}/orders/{orderId} {
      allow read: if true;
      allow write: if (
        request.auth != null && (request.auth.uid == userId || isAdmin())
      ) || (
        // Validate that the request carries an agentToken that maps to this owner
        // and that mapping exists in top-level agentTokens
        exists(/databases/$(database)/documents/agentTokens/$(request.resource.data.agentToken)) &&
        get(/databases/$(database)/documents/agentTokens/$(request.resource.data.agentToken)).data.ownerUid == userId
      );
    }

    // Team subcollection: owner or admin
    match /profiles/{userId}/team/{memberId} {
      allow read, write: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }

    // Owner-only access for other profile docs and subcollections (admin also allowed)
    match /profiles/{userId} {
      allow read, write: if request.auth != null && (request.auth.uid == userId || isAdmin());
      match /{document=**} {
        allow read, write: if request.auth != null && (request.auth.uid == userId || isAdmin());
      }
    }
  }
} 